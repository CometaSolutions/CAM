<?xml version="1.0" encoding="utf-8"?>
<Project
  DefaultTargets="UtilPack_CheckVariables;UtilPack_Tests;UtilPack_Compile;UtilPack_PEVerify;UtilPack_NuGet"
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
  >
  <!-- TODO run NUnit tests -->
  <PropertyGroup>
    <UtilPackBaseDir Condition=" '$(UtilPackBaseDir)' == '' ">$(MSBuildThisFileDirectory)..</UtilPackBaseDir>
  </PropertyGroup>
  
  <Target Name="UtilPack_CheckVariables">
    <!-- Must specify release notes -->
    <Error Condition="'$(UtilPackReleaseNotes)' == ''" Text="Please specify release notes in UtilPackReleaseNotes property." />
  </Target>
  
  <Target Name="UtilPack_Tests">
    <!-- NuGet restore (NUnit package) -->
    <CommonBuildTools.NuGetTaskRestore
      NuGetExecutable="$(UtilPackNuGetExecutable)"
      NuGetManagementFile="$(UtilPackBaseDir)\NuGetPackages.xml"
      />
      
    <!-- Compile CIL Tests assembly -->
    <MSBuild
      Projects="$(UtilPackBaseDir)/Source/CAM.sln"
      Properties="Configuration=Release"
      />
      
    <!-- Call NUnit task -->
    <CommonBuildTools.NUnitTask
      Assemblies="CILAssemblyManipulator.Tests.dll"
      IncludeCategories="UtilPack"
      NoShadowAssemblies="True"
      WorkingDirectory="$(UtilPackBaseDir)/Source/CILAssemblyManipulator.Tests/bin/Release"
      />
  </Target>
  
  <Target Name="UtilPack_Compile">
    
    <!-- Build UtilPack, SL version -->
    <MSBuild Projects="$(MSBuildThisFileDirectory)UtilPack.build" Properties="UtilPackConfiguration=Release_SL" />
    
    <!-- Build UtilPack, normal version -->
    <MSBuild Projects="$(MSBuildThisFileDirectory)UtilPack.build" Properties="UtilPackConfiguration=Release;UtilpackSkipCILMerge=True" />
  </Target>
   
  <Target Name="UtilPack_PEVerify">
    <!-- First, delete all files that won't be included in the NuGet package. -->
    <ItemGroup>
      <UtilPackFilesToPersist Include="$(UtilPackBaseDir)\Output\Release\dotNET\UtilPack.*"/>
      <UtilPackFilesToPersist Include="$(UtilPackBaseDir)\Output\Release\SL\UtilPack.*"/>
      
      <UtilPackFilesToDelete Include="$(UtilPackBaseDir)\Output\Release\dotNET\*.*"/>
      <UtilPackFilesToDelete Include="$(UtilPackBaseDir)\Output\Release\SL\*.*"/>
      <UtilPackFilesToDelete Remove="@(UtilPackFilesToPersist)"/>
    </ItemGroup>
    <Delete
      Files="@(UtilPackFilesToDelete)"
    />
    
    <!-- Files for PEVerify -->
    <ItemGroup>
      <PEVerifyFiles Include="$(UtilPackBaseDir)\Output\Release\dotNET\UtilPack.dll" />
      <PEVerifyFiles Include="$(UtilPackBaseDir)\Output\Release\SL\UtilPack.dll" />
    </ItemGroup>
    
    <!-- Verify all .dll files exist -->
    <PropertyGroup>
      <PEVerifyFilesCount>@(PEVerifyFiles->Count())</PEVerifyFilesCount>
      <PEVerifyFilesExpectedCount>2</PEVerifyFilesExpectedCount>
    </PropertyGroup>
    <Error Condition=" '$(PEVerifyFilesCount)' != '$(PEVerifyFilesExpectedCount)' " Text="Not all required files for PEVerify are present ($(PEVerifyFilesCount))." />

    <!-- Call PEVerify -->
    <CommonBuildTools.PEVerifyTask
      FileToVerify="%(PEVerifyFiles.Identity)"
      />
  </Target>
   
  <Target Name="UtilPack_NuGet">
    <!-- NuSpec file information -->
    <PropertyGroup>
      <!-- Common -->
      <UtilPackBaseDirNuGet>$(UtilPackBaseDir)\NuGet</UtilPackBaseDirNuGet>
    
      <!-- NuGet Spec -->
      <UtilPackNuSpecVersionFilename Condition=" '$(UtilPackNuSpecVersion)' == '' ">$(MSBuildThisFileDirectory)../Source/UtilPackVersion.txt</UtilPackNuSpecVersionFilename>
      <UtilPackNuSpecFilePath>$(UtilPackBaseDirNuGet)\UtilPack.nuspec</UtilPackNuSpecFilePath>
    </PropertyGroup>
    <ItemGroup>
      <UtilPackFile Include="Output\Release\dotNET\UtilPack.dll">
        <TargetFilePath>lib\portable-net40+win8+wpa81\UtilPack.dll</TargetFilePath>
      </UtilPackFile>
      <UtilPackFile Include="Output\Release\dotNET\UtilPack.xml">
        <TargetFilePath>lib\portable-net40+win8+wpa81\UtilPack.xml</TargetFilePath>
      </UtilPackFile>
      <UtilPackFile Include="Output\Release\SL\UtilPack.dll">
        <TargetFilePath>lib\portable-net45+sl50+wp80\UtilPack.dll</TargetFilePath>
      </UtilPackFile>
      <UtilPackFile Include="Output\Release\SL\UtilPack.xml">
        <TargetFilePath>lib\portable-net45+sl50+wp80\UtilPack.xml</TargetFilePath>
      </UtilPackFile>
    </ItemGroup>
    
    <!-- Generate .nuspec file -->
    <CommonBuildTools.NuGetTaskNuSpec
      VersionFile="$(UtilPackNuSpecVersionFilename)"
      VersionContents="$(UtilPackNuSpecVersion)"
      Copyright_InceptionYear="2014"
      PackageID="UtilPack"
      Authors="Stanislav Muhametsin"
      Description="Utility Package for CLR is small and extremely portable library aimed to provide useful tools to read and write binary data, expose partial collection API (write-only, read-only, Command-Query Separation), and to work with CLR reflection."
      Title="Utility Package for CLR"
      ReleaseNotes="$(UtilPackReleaseNotes)"
      Tags="clr .net mono portable utility binary data read write collection command query separation reflection"
      Summary="Utility Package is small DLL containing useful components for all kind of applications."
      ProjectURL="https://github.com/CometaSolutions/CAM"
      LicenseURL="http://www.apache.org/licenses/LICENSE-2.0"
      RequireLicenseAcceptance="False"
      Files="@(UtilPackFile)"
      OutputPath="$(UtilPackNuSpecFilePath)"
      >
      <Output TaskParameter="GeneratedNuSpecVersion" PropertyName="UtilPackNuSpecVersionGenerated" />
    </CommonBuildTools.NuGetTaskNuSpec>

    <!-- Generate the .nupkg file -->
    <CommonBuildTools.NuGetTaskPackage
      NuSpecFile="$(UtilPackNuSpecFilePath)"
      OutputDirectory="$(UtilPackBaseDirNuGet)"
      BasePath="$(UtilPackBaseDir)"
      MinClientVersion="2.5"
    />
    
    <!-- Push if API-key or config file property specified -->
    <CommonBuildTools.NuGetTaskPush
      Condition=" '$(UtilPackNuGetPushAPIKey)' != '' or '$(UtilPackNuGetPushConfigFile)' != '' "
      PackageFilePath="$(UtilPackBaseDirNuGet)\UtilPack.$(UtilPackNuSpecVersionGenerated).nupkg"
      APIKey="$(UtilPackNuGetPushAPIKey)"
      Source="$(UtilPackNuGetPushSource)"
      ConfigFile="$(UtilPackNuGetPushConfigFile)"
      />
  </Target>
  
  <Import Project="$(UtilPackBaseDir)/CommonBuildTools/CLR/MSBuild/NuGetTasks.targets" />
  
  <Import Project="$(UtilPackBaseDir)/CommonBuildTools/CLR/MSBuild/PEVerify.targets" />
    
  <Import Project="$(UtilPackBaseDir)/CommonBuildTools/CLR/MSBuild/NUnit.targets" />
  
</Project>