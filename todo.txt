- UtilPack
 - AsyncStream interface - to support stream-like API with cancellation tokens and timeouts

- CAM.Structural, CAM.Logical:
 - Introduce loop detection to interop algorithms (nested types)

- CAM.Physical:
 - Documentation
 - Extensible signatures
 - Extensible op-codes
  - Start by changing OpCodeInfo.OpCode return type OpCode -> OpCodeEncoding. There will be a lot of changes but I think it is possible.
  - A separate Meta.OpCodeProvider interface will be required, retrievable from CILMetaData.)
  - OpCodeInfoWithNoOperand -> instances of this should retrieved from Meta.OpCodeProvider.
 
- CAM.Logical:
 - Revisit documentation (code samples etc)
 - Refactor IsSubclassOf -method.
 - Add 'CILElementKind' (enum, e.g. "Assembly", "Module", "Type", etc) getter to all relevant interfaces returned by various properties and methods.

- CAM.Structural:
 - Add "MergeWithAnother" functionality to assembly, module, type.
 - Documentation